<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-10T09:34:34.238Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8-25</title>
    <link href="http://example.com/2021/08/25/8-25/"/>
    <id>http://example.com/2021/08/25/8-25/</id>
    <published>2021-08-25T13:27:37.000Z</published>
    <updated>2021-09-10T09:34:34.238Z</updated>
    
    <content type="html"><![CDATA[<h3 id="用markdown编辑器上传图片-与跨域问题"><a href="#用markdown编辑器上传图片-与跨域问题" class="headerlink" title="用markdown编辑器上传图片-与跨域问题"></a>用markdown编辑器上传图片-与跨域问题</h3><h6 id="markdown编辑器上传图片"><a href="#markdown编辑器上传图片" class="headerlink" title="markdown编辑器上传图片"></a>markdown编辑器上传图片</h6><blockquote><p>  利用昨天所写的上传图片的方法以及图片转换为base64位的方法 </p><p>  查看markdow文档中图片上传的方法</p><p>  markdown官方文档：<a href="https://github.com/hinesboy/mavonEditor">https://github.com/hinesboy/mavonEditor</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mavon-editor</span> <span class="attr">ref</span>=<span class="string">&quot;md&quot;</span> @<span class="attr">imgAdd</span>=<span class="string">&quot;$imgAdd&quot;</span> /&gt;</span></span>    </span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//这两个方法可查看昨天的笔记</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;uploadToGIthub,getFileBase64&#125; <span class="keyword">from</span> <span class="string">&#x27;../api/upload&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">img_url_pre</span>:<span class="string">&#x27;https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">imgurl</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">async</span> $imgAdd(pos,$file)&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> $vm=<span class="built_in">this</span>.$refs.md; </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> base64Img=<span class="keyword">await</span> getFileBase64($file);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> res=<span class="keyword">await</span> uploadToGithub($file.name,base64Img);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> url=<span class="built_in">this</span>.img_url_pre+res.data.content.path</span></span></span><br><span class="line"><span class="javascript"><span class="xml">$vm.$img2Url(pos,url)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h6><blockquote><p>思考：前后端交互？流程？</p><ol><li><p>前端页面搭建， 数据搭建，图片上传后的地址</p></li><li><p>搭建后端</p></li><li><p>向后台发送数据</p></li><li><p>后台接受数据</p></li><li><p>存储数据，处理数据</p></li><li><p>返回结果</p></li></ol></blockquote><blockquote><p>思考：能做什么？</p><p> 增删改查 CURD</p></blockquote><h6 id="怎么解决跨域？"><a href="#怎么解决跨域？" class="headerlink" title="怎么解决跨域？"></a>怎么解决跨域？</h6><blockquote><ol><li><p>webapck-dev-server代理 </p><p>缺点：生产环境无效</p></li><li><p>cors    √ </p><p>优点：后端通用的方案，通用性强</p><p>缺点：二次请求【①options：探测有没有跨域 ②真正的请求 put】</p></li><li><p>nginx 反向代理  √</p><p>优点：反向代理linux</p></li><li><p>jsonp</p><p>缺点：只能get请求，模拟script标签</p></li><li><p>H5 domain </p><p>优点：cookie</p></li></ol></blockquote><h6 id="CORS使用"><a href="#CORS使用" class="headerlink" title="CORS使用"></a>CORS使用</h6><blockquote><ol><li><p>server服务器加载<br>npm i express-generator -g<br>express server -e</p></li><li><p>  server&gt;app.js配置COR  【注意：要在请求之前配置！！】</p></li></ol>   <img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210825215548.png" style="zoom:50%;" /><ol start="3"><li>  server&gt;bin&gt;www</li></ol>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3000 为端口号</span></span><br><span class="line"><span class="keyword">var</span> port = normalizePort(process.env.PORT || <span class="string">&#x27;3000&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li> serve&gt;routes 下创建自己的router.js—-编写方法</li></ol>   <img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210825220219.png" style="zoom:50%;" /><ol start="5"><li><p>server&gt;app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用自己编写的方法</span></span><br><span class="line"><span class="keyword">var</span> studentsRouter = <span class="built_in">require</span>(<span class="string">&#x27;./routes/w_students&#x27;</span>);</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line">app.use(<span class="string">&#x27;/students&#x27;</span>, studentsRouter);<span class="comment">//学员管理</span></span><br><span class="line"><span class="comment">//接口为：/students/list </span></span><br></pre></td></tr></table></figure></li><li><p>封装axios </p><p> ① 【utils&gt;request.js】</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> request=axios.create(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&#x27;http://localhost:3000&#x27;</span>,</span><br><span class="line">    <span class="attr">timeout</span>:<span class="number">15000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">request.interceptors.response.user(<span class="function"><span class="params">re</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> re.data</span><br><span class="line">&#125;),<span class="function"><span class="title">fuction</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request</span><br></pre></td></tr></table></figure><p> ②【api&gt;students.js】</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;../utils/request.js&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getList</span>(<span class="params">params</span>)</span>&#123; <span class="comment">//get请求</span></span><br><span class="line">    <span class="keyword">return</span> axios(&#123;</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;/students/list&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">        params,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setList</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> axios(&#123;</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;/students/setlist&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        data</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在所需文件里面引入使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> API <span class="keyword">from</span> <span class="string">&#x27;../../API.students&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="keyword">async</span> <span class="function"><span class="title">getList</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 调用数据</span></span><br><span class="line">          <span class="keyword">let</span> res= <span class="keyword">await</span> API.getStudentsList();</span><br><span class="line">          <span class="keyword">let</span> arr = res.msg</span><br><span class="line">            arr.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span>(item.userDisable===<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                item.userDisable=<span class="literal">false</span></span><br><span class="line">              &#125;<span class="keyword">else</span> <span class="keyword">if</span>(item.userDisable===<span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                item.userDisable=<span class="literal">true</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          <span class="built_in">this</span>.tableData=arr;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">async</span> <span class="function"><span class="title">change</span>(<span class="params">obj</span>)</span>&#123;<span class="comment">// 禁用---非禁用</span></span><br><span class="line">          <span class="keyword">let</span> res = <span class="keyword">await</span> API.setUserDisable(&#123;<span class="attr">id</span>:obj.id&#125;)</span><br><span class="line">          <span class="keyword">if</span>(res.code===<span class="number">1</span>)<span class="built_in">this</span>.getList()</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>server与app必须同时运行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server运行： npm start</span><br><span class="line"><span class="attr">app</span>:npm run dev</span><br></pre></td></tr></table></figure><p>每次更新都自己刷新，不需要重新启动<br>下载：<br> 一、npm i nodemon -s<br> 二、package.json中配置<br>“scripts”: {</p><pre><code>&quot;start&quot;: &quot;node ./bin/www&quot;,&quot;auto&quot;:&quot;nodemon ./bin/www&quot;</code></pre><p>  },<br> 三、启动：npm run auto</p></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;用markdown编辑器上传图片-与跨域问题&quot;&gt;&lt;a href=&quot;#用markdown编辑器上传图片-与跨域问题&quot; class=&quot;headerlink&quot; title=&quot;用markdown编辑器上传图片-与跨域问题&quot;&gt;&lt;/a&gt;用markdown编辑器上传图片-与跨域</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>8-24</title>
    <link href="http://example.com/2021/08/24/8-24/"/>
    <id>http://example.com/2021/08/24/8-24/</id>
    <published>2021-08-24T09:29:34.000Z</published>
    <updated>2021-09-10T09:33:46.262Z</updated>
    
    <content type="html"><![CDATA[<h3 id="markdown编辑器与代码形式上传图片"><a href="#markdown编辑器与代码形式上传图片" class="headerlink" title="markdown编辑器与代码形式上传图片"></a>markdown编辑器与代码形式上传图片</h3><h6 id="markdown是可以在页面展示的一种编辑器"><a href="#markdown是可以在页面展示的一种编辑器" class="headerlink" title="markdown是可以在页面展示的一种编辑器"></a>markdown是可以在页面展示的一种编辑器</h6><blockquote><p>文档说明：<a href="https://github.com/hinesboy/mavonEditor">https://github.com/hinesboy/mavonEditor</a></p><ol><li>安装：npm install mavon-editor –save</li><li>在全局引入:index.js</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">   <span class="keyword">import</span> mavonEditor <span class="keyword">from</span> <span class="string">&#x27;mavon-editor&#x27;</span></span><br><span class="line">   <span class="keyword">import</span> <span class="string">&#x27;mavon-editor/dist/css/index.css&#x27;</span></span><br><span class="line"></span><br><span class="line">   Vue.use(mavonEditor)</span><br><span class="line">   <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">       <span class="string">&#x27;el&#x27;</span>: <span class="string">&#x27;#main&#x27;</span>,</span><br><span class="line">       <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> &#123; <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span> &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>可以在页面使用l</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">mavon-editor</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span>/&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h6 id="将图片上传到github"><a href="#将图片上传到github" class="headerlink" title="将图片上传到github"></a>将图片上传到github</h6><blockquote><p>今天是以代码形式的方式上传到github</p><ol><li><p>地址：</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210910173243.png" style="zoom:33%;" /></li><li><p>注意点：图片格式必须是base64</p></li><li><p>编写一个请求方法:发送上传图片请求</p></li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> uploadToGithub = <span class="function">(<span class="params">filename,base64Img</span>)=&gt;</span>&#123;<span class="comment">//参数:图片路径,base64格式的图片</span></span><br><span class="line">    <span class="keyword">const</span> url=<span class="string">`https://api.github.com/repos/1wangmengjiang/cdn/contents/imgs/<span class="subst">$&#123;filename&#125;</span>`</span></span><br><span class="line">    <span class="keyword">return</span> axios(&#123;</span><br><span class="line">        <span class="attr">url</span>:url,<span class="comment">//请求地址</span></span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;put&#x27;</span>, <span class="comment">//需要用put请求</span></span><br><span class="line">        <span class="attr">headers</span>:&#123; <span class="comment">//请求头</span></span><br><span class="line">            <span class="attr">Accept</span>:<span class="string">&#x27;application/vnd.github.v3+json&#x27;</span>,</span><br><span class="line">            <span class="attr">Authorization</span>:<span class="string">&#x27;token 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&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">data</span>:&#123;</span><br><span class="line">            <span class="string">&quot;message&quot;</span>:<span class="string">&#x27;上传图片&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;committer&quot;</span>:&#123; <span class="comment">//提交到哪里去</span></span><br><span class="line">                <span class="string">&quot;name&quot;</span>:<span class="string">&quot;1wangmengjiang&quot;</span>,<span class="comment">//博客名字</span></span><br><span class="line">                <span class="string">&quot;email&quot;</span>:<span class="string">&quot;220070668@qq.com&quot;</span> <span class="comment">//邮箱地址</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>:base64Img <span class="comment">//发送的内容</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>图片转换成base64格式</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> gitFileBase64= <span class="function"><span class="params">file</span>=&gt;</span>&#123; <span class="comment">//参数：图片的本地路径</span></span><br><span class="line">    <span class="comment">//因为该方法内部是异步，我们需要同步的，所以引入promise实例</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> f=<span class="keyword">new</span> FileReader();</span><br><span class="line">        f.readAsDataURL(file);</span><br><span class="line">        f.onload=<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> res =e.target.result.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">            resolve(res)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>页面展示</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">input</span> @<span class="attr">change</span>=<span class="string">&#x27;change&#x27;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&#x27;imgurl&#x27;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">   <span class="comment">//引入方法</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;uploadToGithub,gitFileBase64&#125; <span class="keyword">from</span> <span class="string">&#x27;../api/upload&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="comment">//查看地址的url，还需要加上图片名称</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">img_url</span>:<span class="string">&#x27;https://cdn/jsdelivr.net/gh/1wangmengjiang/cdn/&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">imgurl</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">async</span> <span class="function"><span class="title">change</span>(<span class="params">e</span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">let</span> imgFiles=e.target.files[<span class="number">0</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="comment">//将图片格式转换为base64格式的</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">let</span> base64Img=<span class="keyword">await</span> gitFileBase64(imgFiles);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">let</span> res=<span class="keyword">await</span> uploadToGithub(imgFiles.name,base64Img);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.imgurl=<span class="built_in">this</span>.img_url+res.data.content.path;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;markdown编辑器与代码形式上传图片&quot;&gt;&lt;a href=&quot;#markdown编辑器与代码形式上传图片&quot; class=&quot;headerlink&quot; title=&quot;markdown编辑器与代码形式上传图片&quot;&gt;&lt;/a&gt;markdown编辑器与代码形式上传图片&lt;/h3&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>8.21-8.23</title>
    <link href="http://example.com/2021/08/23/8-21-8-23/"/>
    <id>http://example.com/2021/08/23/8-21-8-23/</id>
    <published>2021-08-23T12:51:02.000Z</published>
    <updated>2021-08-23T13:45:57.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要内容：完成宝宝说项目"><a href="#主要内容：完成宝宝说项目" class="headerlink" title="主要内容：完成宝宝说项目"></a>主要内容：完成宝宝说项目</h2><blockquote><p>小组分工完成的，我主要完成动画片页面以及动画片列表以及播放</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823210409.png" style="zoom: 25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823210449.png" style="zoom: 25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823210558.png" style="zoom: 25%;" /></p><h6 id="1-有接口文档：封装axios调用数据渲染页面"><a href="#1-有接口文档：封装axios调用数据渲染页面" class="headerlink" title="1.有接口文档：封装axios调用数据渲染页面"></a>1.有接口文档：封装axios调用数据渲染页面</h6><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823210951.png" style="zoom:33%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823211213.png" style="zoom:33%;" /><h6 id="2-在页面调用该方法，获取数据"><a href="#2-在页面调用该方法，获取数据" class="headerlink" title="2.在页面调用该方法，获取数据"></a>2.在页面调用该方法，获取数据</h6><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823211540.png" style="zoom: 25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823211720.png" style="zoom:25%;" /></p><h6 id="3-渲染页面，点击每一条数据进入对应的list页面"><a href="#3-渲染页面，点击每一条数据进入对应的list页面" class="headerlink" title="3.渲染页面，点击每一条数据进入对应的list页面"></a>3.渲染页面，点击每一条数据进入对应的list页面</h6><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823211720.png" style="zoom:33%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823211856.png" style="zoom:33%;" /></p><h6 id="4-同理，list页面根据当前所点击的该条数据找到对应的list数据并渲染"><a href="#4-同理，list页面根据当前所点击的该条数据找到对应的list数据并渲染" class="headerlink" title="4.同理，list页面根据当前所点击的该条数据找到对应的list数据并渲染"></a>4.同理，list页面根据当前所点击的该条数据找到对应的list数据并渲染</h6><p>【item是当前所点击的该个动画片；list是根据item.id找到的对应list数据并渲染】</p><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823212302.png" style="zoom:25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823212718.png" style="zoom: 25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823212801.png" style="zoom:25%;" /></p><h6 id="5-点击每一集的动画片跳转到新的页面，并获取该集动画片的数据"><a href="#5-点击每一集的动画片跳转到新的页面，并获取该集动画片的数据" class="headerlink" title="5.点击每一集的动画片跳转到新的页面，并获取该集动画片的数据"></a>5.点击每一集的动画片跳转到新的页面，并获取该集动画片的数据</h6><p>【跳转页面：应该传值为当前的item，根据item.id找到对应数据的mp4数据，利用radio标签渲染出来】</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823213052.png" style="zoom:25%;" /><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823213010.png" style="zoom:25%;" /><h6 id="6-动画片播放页面"><a href="#6-动画片播放页面" class="headerlink" title="6.动画片播放页面"></a>6.动画片播放页面</h6><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210823213504.png" style="zoom:33%;" /><h6 id="7-上传自己所写文件，与小组合并，当发生冲突时修改"><a href="#7-上传自己所写文件，与小组合并，当发生冲突时修改" class="headerlink" title="7.上传自己所写文件，与小组合并，当发生冲突时修改"></a>7.上传自己所写文件，与小组合并，当发生冲突时修改</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">自己：</span><br><span class="line">     git add .</span><br><span class="line">     git commit -m 提交内容</span><br><span class="line">     git push origin wmj</span><br><span class="line">dev：</span><br><span class="line">     git pull origin dev</span><br><span class="line">     git merge wmj</span><br><span class="line">修改冲突内容后</span><br><span class="line"><span class="attr">dev</span>: </span><br><span class="line">    git add .</span><br><span class="line">    git commit -m 修改完成</span><br><span class="line">    git push origin dev</span><br><span class="line">    </span><br><span class="line">git checkout wmj</span><br><span class="line"></span><br><span class="line">自己：</span><br><span class="line">    git merge dev</span><br><span class="line">    继续完善项目，继续合并</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">    <span class="number">1.</span> 巩固并正确使用git命令，以及小组上传合并等问题</span><br><span class="line">    <span class="number">2.</span> 路由传参推荐使用<span class="built_in">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">query</span>:&#123;&#125;&#125;)</span><br><span class="line">       理由：动态路由，刷新页面传值不会丢失，但是会在地址栏显示所传值的内容</span><br><span class="line">    <span class="number">3.</span> 封装路由，正确跳转：首次进入页面进入到正确页面，跳转其他页面，刷新并不会返回到最初重定向的页面</span><br><span class="line">    <span class="number">4.</span>移动端知识复习：rideo、audio标签的正确使用</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;主要内容：完成宝宝说项目&quot;&gt;&lt;a href=&quot;#主要内容：完成宝宝说项目&quot; class=&quot;headerlink&quot; title=&quot;主要内容：完成宝宝说项目&quot;&gt;&lt;/a&gt;主要内容：完成宝宝说项目&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;小组分工完成的，我主要完成动画片页</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>8-20</title>
    <link href="http://example.com/2021/08/20/8-20/"/>
    <id>http://example.com/2021/08/20/8-20/</id>
    <published>2021-08-20T12:28:42.000Z</published>
    <updated>2021-09-10T09:29:39.129Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git冲突问题"><a href="#git冲突问题" class="headerlink" title="git冲突问题"></a>git冲突问题</h3><p>团队协作中，可能两个人同时编辑了同一段代码，可能会有冲突：</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210910172636.png" style="zoom:50%;" /><blockquote><p>解决：</p><p> 1.先解决冲突问题，编辑好代码</p><p> 2.修改完冲突之后：</p><p>​         B： git add .</p><p>​         B:   git commit -m ‘修改冲突’</p><p>​         B:   git push origin dev</p><p>​         A:  在A分支里面   git pull origin dev</p><p>​         B:  在B分支里面   git pull origin dev</p></blockquote><h3 id="避免提交一些不必要的文件"><a href="#避免提交一些不必要的文件" class="headerlink" title="避免提交一些不必要的文件"></a>避免提交一些不必要的文件</h3><blockquote><ol><li><p>清空add之前的缓存： git rm -r –cached .</p></li><li><p>创建一个文件，文件名：.gitignore</p></li><li><p>在文件内写入不需要传入的文件名称</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/image-20210820204743682.png" alt="image-20210820204743682" style="zoom:50%;" /></li></ol></blockquote><h2 id="项目初始时候的一些问题"><a href="#项目初始时候的一些问题" class="headerlink" title="项目初始时候的一些问题"></a>项目初始时候的一些问题</h2><blockquote><p>我们需要用axios请求数据，这个时候需要封装axios，axios的baseurl应该是数据的url，在对应的方法里面请求对应需要用到的数据。</p><img src="image/image-20210820205040971.png" alt="image-20210820205040971" style="zoom:50%;" /><p>1.我们需要请求的baseurl路径应该为 ：<a href="http://bb.shoujiduoduo.com/baby/bb.php">http://bb.shoujiduoduo.com/baby/bb.php</a></p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210910172807.png" style="zoom:50%;" /><p>2.确定好是get请求还是post请求，编辑方法</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210910172842.png" style="zoom:50%;" /><p>3.在页面调用方法，传入对应的参数内容</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/20210910172923.png" style="zoom:33%;" /></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;git冲突问题&quot;&gt;&lt;a href=&quot;#git冲突问题&quot; class=&quot;headerlink&quot; title=&quot;git冲突问题&quot;&gt;&lt;/a&gt;git冲突问题&lt;/h3&gt;&lt;p&gt;团队协作中，可能两个人同时编辑了同一段代码，可能会有冲突：&lt;/p&gt;
&lt;img src=&quot;https:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>8-19</title>
    <link href="http://example.com/2021/08/19/8-19/"/>
    <id>http://example.com/2021/08/19/8-19/</id>
    <published>2021-08-19T02:55:20.000Z</published>
    <updated>2021-09-10T09:25:33.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><p>1.下载PicGo应用 ：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>2.在github设定一个Token，按照图示一一设置：</p><p>a.<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b2.jpg" style="zoom:50%;" /></p><p>b.<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b3.jpg" style="zoom:50%;" /></p><p>c.<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b4.jpg" style="zoom:50%;" /></p><p>d.<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b5.jpg" style="zoom:50%;" /></p><p>e.<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b6-1629353063372.jpg" style="zoom:50%;" /></p><p>2.设置gitHub图床</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b1-1629344107175.jpg" style="zoom:50%;" /><p>3.最后调制Typora</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/b7.jpg" style="zoom:50%;" /><p>4.完成，以后在Typora中选择图片点击上传就可以了。</p><h2 id="上线博客"><a href="#上线博客" class="headerlink" title="上线博客"></a>上线博客</h2><p>1.在github中创建仓库</p><p>2.找到博客代码目录</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/c1.jpg" style="zoom:33%;" /><p>3.生成静态资源文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>4.复制public目录里面的内容 ===&gt;&gt; 到新的文件夹里面</p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/c2.jpg" style="zoom:50%;" /><p>5.在新的文件夹里面初始化git,并且关联</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a.初始化.git仓库：git init</span><br><span class="line">b.添加项目到缓存：git add .</span><br><span class="line">c.提交到本地：git commit -m <span class="string">&#x27;描述&#x27;</span></span><br><span class="line">d.上传ssn地址：git remote add origin 远程地址git@eeeeeeee</span><br><span class="line">         <span class="comment">//查看是否关联远程地址：git remote -v </span></span><br><span class="line">e.推送到远程：git push origin master </span><br></pre></td></tr></table></figure><p>6.通过地址的方式去浏览：</p><p>githbu用户名.github.io</p><p>例如： 1wangmengjiang.github.io </p><h2 id="git的一些命令"><a href="#git的一些命令" class="headerlink" title="git的一些命令"></a>git的一些命令</h2><p>可以团队协作的一些应用：cvs、svn、git、</p><h3 id="git的命令"><a href="#git的命令" class="headerlink" title="git的命令"></a>git的命令</h3><blockquote><p>基于个人</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git clone 地址  :克隆一个仓库地址</span><br><span class="line">git init     :生成.git文件</span><br><span class="line">git add 文件名字   ：【git add .】将所有文件提交到缓存，没有提交记录</span><br><span class="line">git commit -m <span class="string">&#x27;描述信息&#x27;</span>  ：提交到本地</span><br><span class="line">git log :查看提交日志</span><br><span class="line">git status ： 查看git状态</span><br><span class="line">git remote add origin 地址：关联远程地址</span><br><span class="line">git remote -v ：查看是否关联远程地址了</span><br><span class="line">git push origin 分支：推送到远程</span><br><span class="line">git pull：从远程拉取  【git pull origin 分支名称】</span><br></pre></td></tr></table></figure><blockquote><p>团队协作—–分支</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">命令可以以姓名命名 </span><br><span class="line">  默认分支【主分支】：master</span><br><span class="line">  合并的分支：dev</span><br><span class="line">  </span><br><span class="line">  创建分支：git branch 分支名字</span><br><span class="line">  合并分支【拉取组员分支】：git merge 分支名字</span><br><span class="line">  切换分支：git checkout 分支名字</span><br><span class="line">     【创建分支并且切换到新的分支里面：git checkout -b  分支名字】</span><br><span class="line">  查看所有分支：git branch -av</span><br><span class="line">   清空git提交历史： git rm -r --cached</span><br></pre></td></tr></table></figure><blockquote><p>团队协作</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>创建仓库</span><br><span class="line"><span class="number">2.</span>组长</span><br><span class="line">  a. git clone 地址</span><br><span class="line">  b. 创建分支：组长分支、dev、master</span><br><span class="line">  c. 组长分支提交代码，并推送到远程</span><br><span class="line"><span class="number">3.</span>组员</span><br><span class="line">  a. 创建组员分支</span><br><span class="line">  b. 克隆仓库地址</span><br><span class="line">  c. 新建组长分支、dev分支</span><br><span class="line">  d. 拉取组长分支，dev分支的远程内容</span><br><span class="line">  e. 组员分支提交代码，推送到远程</span><br><span class="line"><span class="number">4.</span>组长</span><br><span class="line">  a. 创建组员分支、拉取远程内容</span><br><span class="line">  b. 把组员分支合并到dev里面</span><br><span class="line">  c. 在推送到远程</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;上传图片&quot;&gt;&lt;a href=&quot;#上传图片&quot; class=&quot;headerlink&quot; title=&quot;上传图片&quot;&gt;&lt;/a&gt;上传图片&lt;/h2&gt;&lt;p&gt;1.下载PicGo应用 ：&lt;a href=&quot;https://github.com/Molunerfinn/PicGo/rel</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>8-18</title>
    <link href="http://example.com/2021/08/18/8-18/"/>
    <id>http://example.com/2021/08/18/8-18/</id>
    <published>2021-08-18T07:18:12.000Z</published>
    <updated>2021-08-18T08:51:07.871Z</updated>
    
    <content type="html"><![CDATA[<p>两种搭建博客方式：hexo，vuepress</p><p>今天学习了：hexo</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载hexo：npm i hexo-cli -g</span><br><span class="line">检查版本：hexo --version</span><br><span class="line">新建博客：hexo init 文件名</span><br><span class="line">运行项目，查看项目：hexo s</span><br><span class="line">快速创建一个.md的文件，会自带一些格式：hexo <span class="keyword">new</span> 文件名</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="搭建cdn"><a href="#搭建cdn" class="headerlink" title="搭建cdn"></a>搭建cdn</h2><p>1.创建一个github账号</p><p>2.新建一个github仓库</p><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/a1.jpg" alt="a1"></p><p>3.创建项目<img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/a2.jpg" alt="a2"></p><p>4.克隆仓库 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:1wangmengjiang/ee.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/a3.jpg" alt="a3"></p><p>5.会在所在文件夹出现这个新建的仓库名字</p><p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/a4.jpg" alt="a4"></p><img src="https://cdn.jsdelivr.net/gh/1wangmengjiang/cdn/img/a5.jpg" alt="a5"  /><p>里面只有一个.git文件</p><p>6.之后就可以新建文件夹，进入到新建文件夹里面执行以下命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;上传&#x27;</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;两种搭建博客方式：hexo，vuepress&lt;/p&gt;
&lt;p&gt;今天学习了：hexo&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
